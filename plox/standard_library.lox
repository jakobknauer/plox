class ListIterator
{
    init(list)
    {
        this.list = list; 
        this.index = 0;
    }

    get()
    {
        return this.list.at(this.index);
    }

    move()
    {
        this.index = this.index + 1;
    }

    hasItems()
    {
        return this.index < this.list.size();
    }
}

class Range
{
    init(start, end, step)
    {
        this.current = start;
        this.end = end;
        this.step = step;
    }

    get()
    {
        return this.current; 
    }

    move()
    {
        this.current = this.current + this.step; 
    }

    hasItems()
    {
        return this.current < this.end;
    }

    iterate()
    {
        return this; 
    }
}

class LinkedListNode
{
    init(value)
    {
        this.value = value;
        this.next = nil;
    }
}

class LinkedList
{
    init()
    {
        this.first = LinkedListNode(-1);
        this.last = this.first;
    }

    append(value)
    {
        this.last.next = LinkedListNode(value);
        this.last = this.last.next;
    }

    iterate()
    {
        return LinkedListIterator(this.first.next);
    }
}

class LinkedListIterator
{
    init(node)
    {
        this.node = node;
    }

    get()
    {
        return this.node.value;
    }

    move()
    {
        this.node = this.node.next;
    }

    hasItems()
    {
        return this.node != nil;
    }
}
